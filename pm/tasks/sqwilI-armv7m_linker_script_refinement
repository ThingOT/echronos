<!--
     eChronos Real-Time Operating System
     Copyright (c) 2017, Commonwealth Scientific and Industrial Research
     Organisation (CSIRO) ABN 41 687 119 230.

     All rights reserved. CSIRO is willing to grant you a licence to the eChronos
     real-time operating system under the terms of the CSIRO_BSD_MIT license. See
     the file "LICENSE_CSIRO_BSD_MIT.txt" for details.

     @TAG(CSIRO_BSD_MIT)
-->
# Motivation

- There are some issues with the armv7m linker script the RTOS uses.
- For example, if one attempts to link a system where the .text region has a size that is not aligned, the linker places the .rodata section at a misaligned address.
- This results in unintended behaviour at runtime.
- Additionally, there is no static checking in place to determine whether user applications fit within device flash and sram.

# Goals

- Remove possibility of alignment issues similar to those above.
- Rewrite the linker script using MEMORY declarations so the linker is able to determine memory bounds.
- Add parameters to the armv7m vectable.py schema such that one can provide the parameters needed to perform this checking.
- Update the included stm32-discovery package to provide correct flash & sram ranges.
- Investigate possibility of using the --print-memory-usage ld option to provide summarized memory metrics when an armv7m system is built.

# Test Plan

- Ensure all regression tests still pass
- Verify stm32 example systems still work on the stm32-discovery hardware
- Verify changes on another manufacturer's armv7m hardware
- Test cases where the linker should fail due to excessive memory usage
- Test cases where the linker should force alignment due to misaligned section sizes
- Code review
