<?xml version="1.0" encoding="UTF-8" ?>
<!--
     eChronos Real-Time Operating System
     Copyright (c) 2017, Commonwealth Scientific and Industrial Research
     Organisation (CSIRO) ABN 41 687 119 230.

     All rights reserved. CSIRO is willing to grant you a licence to the eChronos
     real-time operating system under the terms of the CSIRO_BSD_MIT license. See
     the file "LICENSE_CSIRO_BSD_MIT.txt" for details.

     @TAG(CSIRO_BSD_MIT)
-->
<system>
  <modules>
    <module name="ppce500.build" />
    <module name="ppce500.default-linker" />
    <module name="ppce500.interrupts-util" />
    <module name="ppce500.vectable">
      <!-- Preemption must be enabled for this module if using with preemptive RTOS variants like Kochab -->
      <preemption>true</preemption>
      <!-- We must designate an interrupt handler preempting if it potentially raises interrupt events -->
      <external_input>
        <handler>exti_interrupt</handler>
        <preempting>true</preempting>
      </external_input>
    </module>
    <module name="ppce500.section-init" />
    <module name="generic.debug" />

    <module name="ppce500.rtos-kochab">
      <internal_asserts>true</internal_asserts>
      <fatal_error>fatal</fatal_error>
      <prefix>rtos</prefix>
      <taskid_size>8</taskid_size>
      <signalset_size>8</signalset_size>

      <!-- Distinct signal labels indicating data receive-ready, receive-overrun, and transmit-ready status -->
      <signal_labels>

        <signal_label>
          <name>rx</name>
        </signal_label>

        <signal_label>
          <name>rx_overrun</name>
        </signal_label>

        <signal_label>
          <name>tx</name>
        </signal_label>

      </signal_labels>

      <!-- All the interrupt events are propagated to the only task in the system -->
      <interrupt_events>
        <interrupt_event>
          <name>rx</name>
          <task>a</task>
          <sig_set>rx</sig_set>
        </interrupt_event>

        <interrupt_event>
          <name>rx_overrun</name>
          <task>a</task>
          <sig_set>rx_overrun</sig_set>
        </interrupt_event>

        <interrupt_event>
          <name>tx</name>
          <task>a</task>
          <sig_set>tx</sig_set>
        </interrupt_event>
      </interrupt_events>

      <tasks>

        <task>
          <name>a</name>
          <function>fn_a</function>
          <priority>30</priority>
          <stack_size>8192</stack_size>
        </task>

      </tasks>

      <mutex>
        <stats>false</stats>
      </mutex>
    </module>

    <!-- Machine-specific library code -->
    <module name="machine-p2020rdb-pca.example.machine-timer" />
    <module name="machine-p2020rdb-pca.example.p2020-pic" />
    <module name="machine-p2020rdb-pca.example.p2020-util" />
    <module name="machine-p2020rdb-pca.example.p2020-duart" />
    <!-- C file defining interrupt handler -->
    <module name="machine-p2020rdb-pca.example.interrupt-buffering-example">
      <variant>kochab</variant>
    </module>
    <!-- C file defining task -->
    <module name="machine-p2020rdb-pca.example.task-echo-example">
      <variant>kochab</variant>
    </module>

  </modules>
</system>
